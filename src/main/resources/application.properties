spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.hikari.maximum-pool-size=10
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#http://localhost:8080/h2-console
spring.h2.console.enabled=true
#spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database=postgresql
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
#
mybatis.mapper-locations=classpath*:mappings/*.xml
#mybatis.type-handlers-package=ru.tinkoff.fintech.handler
cache.course.size=5
admin.username=admin
admin.password=admin
user.username=user
user.password=user

spring.kafka.bootstrap-servers=sulky-01.srvs.cloudkafka.com:9094,sulky-02.srvs.cloudkafka.com:9094,sulky-03.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="000m6ke2" password="KJ2ZbB7B5NmjCq803E1Abuli132eH1dy";
spring.kafka.consumer.group-id=000m6ke2-fintech-out

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=sample.kafka

cloudkarafka.topic=000m6ke2-fintech-out
